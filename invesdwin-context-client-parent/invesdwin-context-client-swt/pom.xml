<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.invesdwin</groupId>
		<artifactId>invesdwin-context-client-parent</artifactId>
		<version>1.0.1</version>
	</parent>
	<artifactId>invesdwin-context-client-swt</artifactId>
	<packaging>jar</packaging>

	<properties>
		<lib.directory>lib/swt</lib.directory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-context-integration</artifactId>
		</dependency>

		<dependency>
			<groupId>de.invesdwin</groupId>
			<artifactId>invesdwin-context-client-swt-provided</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.jface</artifactId>
		</dependency>

		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout-swt</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-swt-lib</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/lib/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- We copy all the swt jars using dependency plugin into a directory -->
			<!-- from where the assembly plugin will pick them for the final package. -->
			<!-- The dependency plugin utilize maven's dependency resolution mechanism -->
			<!-- and maven's repositories. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<stripVersion>true</stripVersion>
							<outputDirectory>${project.build.directory}/${lib.directory}</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
							<artifactItems>
								<artifactItem>
									<groupId>org.eclipse.platform</groupId>
									<artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
									<version>${version.eclipse-swt}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.platform</groupId>
									<artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
									<version>${version.eclipse-swt}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.platform</groupId>
									<artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
									<version>${version.eclipse-swt}</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Assembly plugin builds the final multiplatform jar package. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/multiplatform.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
